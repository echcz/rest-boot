<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.echcz.restboot.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="cn.echcz.restboot.model.User">
        <id property="id" column="id" jdbcType="INTEGER" />
        <result property="username" column="username" jdbcType="VARCHAR" />
        <result property="password" column="password" jdbcType="CHAR" />
        <result property="state" column="state" jdbcType="TINYINT" />
    </resultMap>

    <resultMap id="DetailResultMap" type="cn.echcz.restboot.model.User">
        <id property="id" column="id" jdbcType="INTEGER" />
        <result property="username" column="username" jdbcType="VARCHAR" />
        <result property="password" column="password" jdbcType="CHAR" />
        <result property="state" column="state" jdbcType="TINYINT" />
        <collection property="roles" ofType="cn.echcz.restboot.model.Role"
                    select="findRolesByUserId">
            <id property="id" column="id" jdbcType="INTEGER" />
            <result property="name" column="name" jdbcType="VARCHAR" />
            <result property="state" column="state" jdbcType="TINYINT" />
            <result property="remark" column="remark" jdbcType="VARCHAR" />
        </collection>
    </resultMap>

    <select id="findRolesByUserId" parameterType="integer" resultType="cn.echcz.restboot.model.Role">
        SELECT r.id, r.name, r.state, r.remark
        FROM user_role
        INNER JOIN role r on user_role.role_id = r.id
        WHERE user_role.user_id = #{id,jdbcType=INTEGER}
            AND r.state = 1
    </select>

    <insert id="add" parameterType="cn.echcz.restboot.model.User"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO user (id, username, password, state)
        VALUES (
            #{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
            #{password,jdbcType=CHAR}, #{state,jdbcType=TINYINT}
        )
    </insert>

    <update id="edit" parameterType="cn.echcz.restboot.model.User">
        UPDATE user
        <set>
            <if test="username!=null and username != ''">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password!=null and password!=''">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="state!=null and state&gt;0">
                state = #{state,jdbcType=TINYINT},
            </if>
        </set>
        WHERE id = #{id,jdbcType=INTEGER}
    </update>

    <insert id="addUserRoles">
        INSERT INTO user_role (user_id, role_id) VALUES
        <foreach collection="roleIds" item="roleId" open="" separator="," close="">
            (#{userId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER})
        </foreach>
    </insert>

    <delete id="removeUserRolesByUserId" parameterType="integer">
        DELETE FROM user_role
        WHERE user_id = #{userId,jdbcType=INTEGER}
    </delete>

    <select id="findById" parameterType="integer" resultMap="BaseResultMap">
        SELECT id, username, password, state
        FROM user
        WHERE id = #{id,jdbcType=INTEGER}
    </select>

    <select id="findDetailById" parameterType="integer" resultMap="DetailResultMap">
        SELECT id, username, password, state
        FROM user
        WHERE id = #{id,jdbcType=INTEGER}
    </select>

    <select id="findAll" parameterType="integer" resultMap="BaseResultMap">
        SELECT id, username, password, state
        FROM user
    </select>

    <select id="findByUsername" parameterType="string" resultMap="BaseResultMap">
        SELECT id, username, password, state
        FROM user
        WHERE username = #{username,jdbcType=VARCHAR}
    </select>

</mapper>