<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.echcz.restboot.mapper.PermissionMapper">
    <resultMap id="BaseResultMap" type="cn.echcz.restboot.model.Permission">
        <id property="id" column="id" jdbcType="INTEGER" />
        <result property="name" column="name" jdbcType="VARCHAR" />
        <result property="method" column="method" jdbcType="VARCHAR" />
        <result property="uri" column="uri" jdbcType="VARCHAR" />
        <result property="remark" column="remark" jdbcType="VARCHAR" />
    </resultMap>

    <resultMap id="DetailResultMap" type="cn.echcz.restboot.model.Permission">
        <id property="id" column="id" jdbcType="INTEGER" />
        <result property="name" column="name" jdbcType="VARCHAR" />
        <result property="method" column="method" jdbcType="VARCHAR" />
        <result property="uri" column="uri" jdbcType="VARCHAR" />
        <result property="remark" column="remark" jdbcType="VARCHAR" />
        <collection property="roles" ofType="cn.echcz.restboot.model.Role"
                    select="findRolesByPermissionId">
            <id property="id" column="id" jdbcType="INTEGER" />
            <result property="name" column="name" jdbcType="VARCHAR" />
            <result property="state" column="state" jdbcType="TINYINT" />
            <result property="remark" column="remark" jdbcType="VARCHAR" />
        </collection>
    </resultMap>

    <select id="findRolesByPermissionId" parameterType="integer" resultType="cn.echcz.restboot.model.Role">
        SELECT r.id, r.name, r.state, r.remark
        FROM permission_role
        INNER JOIN role r on permission_role.role_id = r.id
        WHERE permission_role.permission_id = #{id,jdbcType=INTEGER}
            AND r.state = 1
    </select>

    <insert id="add" parameterType="cn.echcz.restboot.model.Permission"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO permission (id, name, method, uri, remark)
        VALUES (
            #{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{method,jdbcType=VARCHAR},
            #{uri,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
        )
    </insert>

    <update id="edit" parameterType="cn.echcz.restboot.model.Permission">
        UPDATE permission
        <set>
            <if test="name!=null and name != ''">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="method!=null and method!=''">
                method = #{method,jdbcType=VARCHAR},
            </if>
            <if test="uri!=null and uri!=''">
                uri = #{uri,jdbcType=VARCHAR},
            </if>
            <if test="remark!=null and remark!=''">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        WHERE id = #{id,jdbcType=INTEGER}
    </update>

    <delete id="removeById" parameterType="integer">
        DELETE FROM permission
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="addPermissionRoles">
        INSERT INTO permission_role (permission_id, role_id) VALUES
        <foreach collection="roleIds" item="roleId" open="" separator="," close="">
            (#{permissionId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER})
        </foreach>
    </insert>

    <delete id="removePermissionRolesByPermissionId" parameterType="integer">
        DELETE FROM permission_role
        WHERE permission_id = #{permissionId,jdbcType=INTEGER}
    </delete>

    <select id="findById" parameterType="integer" resultMap="BaseResultMap">
        SELECT id, name, method, uri, remark
        FROM permission
        WHERE id = #{id,jdbcType=INTEGER}
    </select>

    <select id="findDetailById" parameterType="integer" resultMap="DetailResultMap">
        SELECT id, name, method, uri, remark
        FROM permission
        WHERE id = #{id,jdbcType=INTEGER}
    </select>

    <select id="findAll" parameterType="integer" resultMap="BaseResultMap">
        SELECT id, name, method, uri, remark
        FROM permission
    </select>

</mapper>